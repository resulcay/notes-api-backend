rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Notes collection rules
    match /notes/{noteId} {
      // Users can only read and write their own notes
      allow read, write: if request.auth != null 
                         && request.auth.uid == resource.data.user_id;
      
      // Allow creation if user is authenticated and user_id matches
      allow create: if request.auth != null 
                    && request.auth.uid == request.resource.data.user_id
                    && validateNoteData(request.resource.data);
      
      // Allow updates if user owns the note and data is valid
      allow update: if request.auth != null 
                    && request.auth.uid == resource.data.user_id
                    && validateNoteData(request.resource.data)
                    && request.resource.data.user_id == resource.data.user_id; // Prevent user_id change
    }
    
    // User profile collection (optional for future use)
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Health check document (used by backend for connection testing)
    match /health_check/{document} {
      allow read, write: if request.auth != null;
    }
  }
}

// Validation function for note data
function validateNoteData(data) {
  return data.keys().hasAll(['title', 'content', 'user_id', 'created_at', 'updated_at'])
         && data.title is string
         && data.title.size() > 0
         && data.title.size() <= 255
         && data.content is string
         && data.user_id is string
         && data.created_at is timestamp
         && data.updated_at is timestamp;
}